DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS DIVISI CASCADE;
DROP TABLE IF EXISTS KONTEN CASCADE;
DROP TABLE IF EXISTS QUALITY_CONTROL CASCADE;
DROP TABLE IF EXISTS DESIGN CASCADE;
DROP TABLE IF EXISTS READY_TO_PUBLISH CASCADE;
DROP TABLE IF EXISTS PUBLISHED CASCADE;
DROP TABLE IF EXISTS NOTES CASCADE;
DROP TABLE IF EXISTS USER_DIVISI CASCADE;

CREATE TYPE ROLES AS ENUM('Admin', 'User');
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";  
CREATE TYPE KANAL_PUBLI AS ENUM ('IG Feed', 'IG Story', 'TikTok', 'Twitter/X', 'Line OA', 'YouTube', 'LinkedIn');

CREATE TABLE IF NOT EXISTS USERS(
    USER_ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    USERNAME VARCHAR(32) UNIQUE NOT NULL,
    PASSWORD VARCHAR(32) NOT NULL,
    ROLES ROLES NOT NULL 
);

CREATE TABLE IF NOT EXISTS DIVISI(
    DIVISI_ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    NAME VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS KONTEN(
    KONTEN_ID UUID PRIMARY KEY,
    REQUESTER_ID UUID,
    TITLE VARCHAR(100) NOT NULL,
    REQ_DATE DATE NOT NULL,
    UP_DATE DATE NOT NULL,
    INSIDENTAL BOOLEAN NOT NULL,
    KANAL KANAL_PUBLI NOT NULL,
    NOTES TEXT, 
    FILE_PATH VARCHAR(255),
    FOREIGN KEY (REQUESTER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS QUALITY_CONTROL(
    QC_ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    KONTEN_ID UUID NOT NULL,
    FOREIGN KEY (KONTEN_ID) REFERENCES KONTEN(KONTEN_ID)
);

CREATE TABLE IF NOT EXISTS DESIGN(
    DESIGN_ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    KONTEN_ID UUID NOT NULL,
    FOREIGN KEY (KONTEN_ID) REFERENCES KONTEN(KONTEN_ID)
);

CREATE TABLE IF NOT EXISTS READY_TO_PUBLISH(
    READY_ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    KONTEN_ID UUID NOT NULL,
    FOREIGN KEY (KONTEN_ID) REFERENCES KONTEN(KONTEN_ID)
);

CREATE TABLE IF NOT EXISTS PUBLISHED(
    PUBLISH_ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    KONTEN_ID UUID NOT NULL,
    FOREIGN KEY (KONTEN_ID) REFERENCES KONTEN(KONTEN_ID)
);

CREATE TABLE IF NOT EXISTS NOTES(
    NOTE_ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    KONTEN_ID UUID NOT NULL,
    NOTE_DATE DATE NOT NULL,
    NOTES TEXT NOT NULL,
    FOREIGN KEY (KONTEN_ID) REFERENCES KONTEN(KONTEN_ID)
);

CREATE TABLE IF NOT EXISTS USER_DIVISI(
    USER_ID UUID NOT NULL,
    DIVISI_ID UUID NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (DIVISI_ID) REFERENCES DIVISI(DIVISI_ID)
);